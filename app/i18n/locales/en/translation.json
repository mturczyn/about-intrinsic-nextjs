{
    "locale-selector": {
        "message": "Choose language."
    },
    "nav": {
        "home": "Home",
        "contact-info": "Contact",
        "technology-stack": "Technology Stack"
    },
    "home": {
        "title": "Hi, I'm Michał",
        "body": "<0>My name is Michał Turczyn. I work as a software engineer, creating websites (like this one) and enjoying what I do. I like to deeply understand what I do and see things through to completion.</0><1>I graduated in mathematics, which greatly helped me in acquiring programming skills.</1><2/><3>My first programming language I learned was C# along with the WinForms framework. Over the years, I've had the opportunity to work with many .NET frameworks such as ASP.NET (Core, Razor Pages) or WPF, Blazor. I've also learned JS (HTML, CSS, JS) and the React framework.</3><4>I'm still trying to learn and grow. This site is an evolution of the <0>previous site</0>, which is written in React as a SPA (single page application). This site, on the other hand, is written using Next.js and it utilizes the optimization of SSR (server-side rendering). I have also developed <1>another page</1> using TanStack Router to further explore SSR.</4>",
        "previous-employers": "Previous employers",
        "previous-employers-body": "Throughout my career, I have worked for the following companies:"
    },
    "contact": {
        "poland": "Poland"
    },
    "technology-stack": {
        "theming": "Theming",
        "theming-description": "For styling the page, I used the TailwindCSS library along with pure CSS.",
        "resources": "Resources",
        "resources-description": "<0>While building this site, I referenced the Next.js documentation and <0>a tutorial on this technology</0>. I struggled a lot with handling multiple languages. The initial version of the site was based on <1>this repository</1>. However, eventually I managed to implement multilingual support correctly using <2>this documentation</2>. I kept the language selection widget from the previous version of the site, from the mentioned repository.</0>",
        "hosting": "Hosting, CI/CD, and repository",
        "hosting-description": "<0>The code for the site is hosted on <0>GitHub repository</0>. The <1>Vercel</1> platform was used for hosting the site - it has excellent support for Next.js, just the GitHub repository needs to be specified, and Vercel platform automatically handles deployment and sets up CI/CD.</0>",
        "pwa-service-workers": "PWA and service workers",
        "pwa-service-workers-description": "By specifying manifest file for the webpage correctly, I have enabled this page to work as PWA (so it is installable as application). Moreover, I have added custom offline page (when user is offline, or page is unavailable), using service workers.",
        "pwa-service-workers-serwist-description": "<0>The first implementation of service workers was poor because it relied on adding a JS file completely outside the application's build system - you had to separately create a file and hardcode the JS code into the layout to import that file. However, I found a much better solution that solves all these problems. It's the <0>Servist</0> library, whose code can be found on <1>GitHub</1>.</0>",
        "pwa-workshop": "PWA workshop",
        "pwa-workshop-description": "<0>I have also launched <0>PWA website</0> with code based on <1>this tutorial</1>, which was about implementing and enhancing PWA website, which was simple markdown editor with possibility to open and save files, with live preview. The page, however, works correctly only on PCs.</0>"
    }
}
